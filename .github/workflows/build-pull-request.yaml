name: Build pull request
on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

env:
  DOCKER_BUILDKIT: 1
  DEBUG: ${{ secrets.ACTIONS_STEP_DEBUG == 'true' }} # Secrets can't be used in step conditions
  # Print JVM flags in debug mode. Uses simulated ternary operator (see https://github.com/actions/runner/issues/409).
  JAVA_TOOL_OPTIONS: ${{ secrets.ACTIONS_STEP_DEBUG == 'true' && '-XX:+PrintFlagsFinal' || '' }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0 # Seems to be required by Sonar to figure out which code is "new"

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        java-version: 19
        distribution: zulu

    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@55e685c48d84285a5b0418cd094606e199cca3b6 # v1

    - name: Setup Gradle
      uses: gradle/gradle-build-action@6095a76664413da4c8c134ee32e8a8ae900f0f1f # v2

    - name: Build fat JAR
      run: ./gradlew bootJar

    - name: Run tests
      id: test
      run: ./gradlew test

    - name: Archive test results
      uses: actions/upload-artifact@v3
      if: always() && (steps.test.conclusion != 'skipped')
      with:
        name: test-results
        path: build/reports/tests/test/**/*
        if-no-files-found: error

    - name: Publish test results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always() && (steps.test.conclusion != 'skipped') && (github.event_name == 'pull_request')
      with:
        junit_files: build/test-results/**/*.xml

    - name: Archive code coverage report
      uses: actions/upload-artifact@v3
      if: always() && (steps.test.conclusion != 'skipped')
      with:
        name: code-coverage-report
        path: build/reports/jacoco/test/html/**/*
        if-no-files-found: error

    - name: Cache Sonar packages
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: sonar
        restore-keys: sonar

    - name: Analyze code with Sonar
      if: always()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      # Seen lots of bizarre errors when Sonar scan was running inside the Gradle daemon:
      # - OutOfMemoryError: Metaspace
      # - Expiring Daemon due to JVM Metaspace space being exhausted
      # - Could not receive a message from the daemon
      # All seemed to appear during Kotlin Sensor's scan.
      run: ./gradlew sonarqube --info --stacktrace --no-daemon

    - name: Analyze Dockerfile with Hadolint
      uses: hadolint/hadolint-action@v3.1.0
      id: hadolint
      if: always()
      with:
        output-file: hadolint-output.sarif
        format: sarif
        failure-threshold: error

    - name: Upload Hadolint results
      uses: github/codeql-action/upload-sarif@v2
      if: always() && (steps.hadolint.conclusion != 'skipped')
      with:
        sarif_file: hadolint-output.sarif

    - name: Build docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        tags: apankowski/garcon:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        load: true

    - name: Analyze image with Trivy
      uses: aquasecurity/trivy-action@0.9.2
      id: trivy
      with:
        image-ref: apankowski/garcon:${{ github.sha }}
        format: sarif
        output: trivy-output.sarif

    - name: Upload Trivy results
      uses: github/codeql-action/upload-sarif@v2
      if: always() && (steps.trivy.conclusion != 'skipped')
      with:
        sarif_file: trivy-output.sarif

    - name: Archive security scanning report
      uses: actions/upload-artifact@v3
      if: always() && (steps.hadolint.conclusion != 'skipped' || steps.trivy.conclusion != 'skipped')
      with:
        name: security-scanning-report
        path: |
          hadolint-output.sarif
          trivy-output.sarif
        if-no-files-found: error

    - name: Submit Gradle dependencies
      uses: mikepenz/gradle-dependency-submission@v0.8.6
      with:
        include-build-environment: true

    - name: Cleanup Gradle Cache
      if: always()
      run: |
        rm -f ~/.gradle/caches/modules-2/modules-2.lock
        rm -f ~/.gradle/caches/modules-2/gc.properties

    - name: Dump github context
      if: always() && (env.DEBUG == 'true')
      env:
        GITHUB_CONTEXT: ${{ toJSON(github) }}
      run: echo $GITHUB_CONTEXT

    - name: Dump environment
      if: failure() || (env.DEBUG == 'true')
      run: |
        echo OS: $(uname -a)
        echo git version: $(git --version)
        echo Java version: $(java --version)
        echo Gradle version: $(./gradlew --version)
        echo Docker version: $(docker --version)

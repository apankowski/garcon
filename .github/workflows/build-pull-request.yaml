name: Build pull request
on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

env:
  DOCKER_BUILDKIT: 1
  DEBUG: ${{ secrets.ACTIONS_STEP_DEBUG == 'true' }} # Secrets can't be used in step conditions

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0 # Seems to be required by Sonar to figure out which code is "new"

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Setup Java
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b # renovate: tag=v1

    - name: Setup Gradle
      uses: gradle/gradle-build-action@3fbe033aaae657f011f88f29be9e65ed26bd29ef # v2

    - name: Build fat JAR
      run: ./gradlew bootJar

    - name: Run tests
      id: test
      run: ./gradlew test

    - name: Archive test results
      uses: actions/upload-artifact@v2
      if: always() && (steps.test.conclusion != 'skipped')
      with:
        name: test-results
        path: build/reports/tests/test/**/*
        if-no-files-found: error

    - name: Publish test results
      uses: EnricoMi/publish-unit-test-result-action@v1
      if: always() && (steps.test.conclusion != 'skipped') && (github.event_name == 'pull_request')
      with:
        check_name: Test Results
        files: build/test-results/**/*.xml

    - name: Archive code coverage report
      uses: actions/upload-artifact@v2
      if: always() && (steps.test.conclusion != 'skipped')
      with:
        name: code-coverage-report
        path: build/reports/jacoco/test/html/**/*
        if-no-files-found: error

    - name: Cache Sonar packages
      uses: actions/cache@v2
      with:
        path: ~/.sonar/cache
        key: sonar
        restore-keys: sonar

    - name: Analyze code with Sonar
      if: always()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: ./gradlew sonarqube --info -Dorg.gradle.jvmargs=-XX:+PrintFlagsFinal

    - name: Build docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Cleanup Gradle Cache
      if: always()
      run: |
        rm -f ~/.gradle/caches/modules-2/modules-2.lock
        rm -f ~/.gradle/caches/modules-2/gc.properties

    - name: Dump github context
      if: always() && (env.DEBUG == 'true')
      env:
        GITHUB_CONTEXT: ${{ toJSON(github) }}
      run: echo $GITHUB_CONTEXT

    - name: Dump environment
      if: failure() || (env.DEBUG == 'true')
      run: |
        echo OS: $(uname -a)
        echo git version: $(git --version)
        echo Java version: $(java --version)
        echo Gradle version: $(./gradlew --version)
        echo Docker version: $(docker --version)
